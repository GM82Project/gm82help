
      Game Maker 8.2 Buffer
      ===================
      version 1.0
  
--------------------------------------------------------------------------------

  Fork of Maarten Baert's HTTPDLL2 for Game Maker 8.2 focused on memory
  management, with many improvements and new features.


--------------------------------------------------------------------------------

    Quick function reference
    ------------------------    
    
buffer_at_end(id)
buffer_clear(id)
buffer_clear_error(id)
buffer_copy(to,from)
buffer_copy_part(to,from,pos,len)
buffer_create()
buffer_deflate(id)
buffer_destroy(id)
buffer_exists(id)
buffer_get_address(id,asrealpointer)
buffer_get_address_string(id,ashexstring)
buffer_get_error(id)
buffer_get_pos(id)
buffer_get_size(id)
buffer_inflate(id)
buffer_load(id,filename)
buffer_load_part(id,filename,pos,len)
buffer_rc4(id,key)
buffer_rc4_buffer(id,idkey)
buffer_read_base64(id,len)
buffer_read_data(id,len)
buffer_read_double(id)
buffer_read_float(id)
buffer_read_hex(id,len)
buffer_read_i16(id)
buffer_read_i32(id)
buffer_read_i64(id)
buffer_read_i8(id)
buffer_read_int(id)
buffer_read_string(id)
buffer_read_u16(id)
buffer_read_u32(id)
buffer_read_u64(id)
buffer_read_u8(id)
buffer_read_uint(id)
buffer_save(id,filename)
buffer_save_append(id,filename)
buffer_set_pos(id,pos)
buffer_set_size(id,size)
buffer_to_string(id)
buffer_write_base64(id,string)
buffer_write_data(id,string)
buffer_write_double(id,value)
buffer_write_float(id,value)
buffer_write_hex(id,string)
buffer_write_i16(id,value)
buffer_write_i32(id,value)
buffer_write_i64(id,value)
buffer_write_i8(id,value)
buffer_write_int(id,value)
buffer_write_string(id,string)
buffer_write_u16(id,value)
buffer_write_u32(id,value)
buffer_write_u64(id,value)
buffer_write_u8(id,value)
buffer_write_uint(id,value)
httprequest_clear_post_parameters(id)
httprequest_clear_request_headers(id)
httprequest_connect(id,url,post)
httprequest_create()
httprequest_destroy(id)
httprequest_exists(id)
httprequest_find_response_header(id,name)
httprequest_get_message_body(id)
httprequest_get_message_body_buffer(id,buffer_id)
httprequest_get_message_body_length(id)
httprequest_get_response_header_count(id)
httprequest_get_response_header_name(id,index)
httprequest_get_response_header_value(id,index)
httprequest_get_state(id)
httprequest_get_status_code(id)
httprequest_remove_post_parameter(id,name)
httprequest_remove_request_header(id,name)
httprequest_reset(id)
httprequest_set_post_parameter(id,name,value)
httprequest_set_post_parameter_file(id,name,filename,buffer_id)
httprequest_set_request_header(id,name,value,replace)
httprequest_update(id)
httprequest_urldecode(string)
httprequest_urlencode(string,keepspecialchars)
listeningsocket_accept(id,socket_id)
listeningsocket_can_accept(id)
listeningsocket_create()
listeningsocket_destroy(id)
listeningsocket_exists(id)
listeningsocket_is_listening(id)
listeningsocket_start_listening(id,ipv6,port,local)
listeningsocket_stop_listening(id)
md5_begin()
md5_end()
md5_read_buffer(id)
md5_read_buffer_part(id,pos,len)
md5_read_file(filename)
md5_read_string(string)
md5_result()
sha1_begin()
sha1_end()
sha1_read_buffer(id)
sha1_read_buffer_part(id,pos,len)
sha1_read_file(filename)
sha1_read_string(string)
sha1_result()
socket_connect(id,address,port)
socket_create()
socket_destroy(id)
socket_exists(id)
socket_get_peer_address(id)
socket_get_read_data_length(id)
socket_get_state(id)
socket_get_write_data_length(id)
socket_read_data(id,buffer_id,bytes)
socket_read_message(id,buffer_id)
socket_read_message_delimiter(id,buffer_id,delimiter)
socket_reset(id)
socket_shut_down(id)
socket_update_read(id)
socket_update_write(id)
socket_write_data(id,buffer_id)
socket_write_message(id,buffer_id)
socket_write_message_delimiter(id,buffer_id,delimiter)
udpsocket_create()
udpsocket_destroy(id)
udpsocket_exists(id)
udpsocket_get_last_address(id)
udpsocket_get_last_port(id)
udpsocket_get_max_message_size(id)
udpsocket_get_state(id)
udpsocket_get_ttl(id)
udpsocket_receive(id,buffer_id)
udpsocket_reset(id)
udpsocket_send(id,buffer_id)
udpsocket_set_destination(id,address,port)
udpsocket_set_ttl(id,ttl)
udpsocket_start(id,ipv6,port)
  
--------------------------------------------------------------------------------